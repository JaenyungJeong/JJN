*비주얼 스튜디오 세팅

확장프로그램 설치

auto rename tag
Brakets keymap
live preview
material icon theme



*톱니바퀴 설정
설치프로그램 폰트 설치후

font 검색 - > font Family -> 'D2Coding' 입력
word wrap -> Controls how lines should wrap. -> on 줄바꿈 설정
Emmet: 검색 -> Emmet: Variables -> en 을 ko 로 변경후 오케이
wheel 검색 -> editor mouse wheel zoom 체크. 문서글자만 마우스 휠로 키우고 줄이기

header {
    width: 100%;
    height: 100px;
    background-image: url(../images/bg-header.jpg);
    line-height: 100px;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 9999;

}


--------------------------------------------------------------------------------------------

코딩 1차시

        <!-- ctrl+shift+? 주석 바로 생성-->
<!-- 1. headings (h1~h6 볼드 자동) 문서전체 대제목(h1으로 주로 한 번 사용) 작성 시 + 소제목(h2이하)-->


 웹 기본 폰트사이즈 : 16px = 1em = 100%

          h1 - 2em
          h2 - 1.5em
          h3 - 1.17em
          h4 - 1em
          h5 - 0.83em
          h6 - 0.67em

<!-- 2. paragraph 내용을 작성할 때 사용하는 테그 <p></p> -->

<!-- 3. Line Breaks <br> -->

<!-- 4. horizontal rules <hr> -->

---------------------------------------------------------------------------------

코딩 2차시

D.T.D 선언!

Document
Type
Definition

1. bold <b></b> & strong <strong></strong>  
- 문서의 키워드처럼 단순히 굵게 표시할 때는 <b> 태그
- 경고나 주의사항처럼 중요한 내용을 강조할 때는 <strong> 태그
- 시맨틱 태그(의미를 가지고 있는 태그)라고 함 ex) div 

2. italic <i>/<i> & emphasis <em></em> 논문 제목, 학술적 표현들 강조할 때
3. superscript <sup></sup> & subscript <sub></sub> 상위첨부 글자 하위 첨부 글자 만들때

* 태그 만들고 ctrl+d 행 복사 

4. quotations <q></q> " " 만들어 인용 문구로 강조할 때

5. address <address></address>주소에 해당하는것에 대한 것을 알려줌 html5에서 시작 글자 기울임. -->

6. mark <mark></mark> 하이라이트 기능이용할시(형광펜 기능)
* 들여쓰기 자동정렬 alt + shift + F -->

7. abbriviation 축약어 있을시 점선 언더바 효과
<abbr title="Deoxyribonucleic acid">DNA</abbr>(Deoxyribonucleic acid) 

8. <meta name="viewport" content="width=device-width, initial-scale=1.0"> <!-- 반응형 웹만들시 필요 -->

9.  unordered-list <ul type="circle" 원테두리 "square" 사각형> <li></li> </ul> 순서없는 리스트
type 속성 기본값 : disc (검정 동그라미●)
    * 그 외 속성값
    circle (○)
    square (■)

10. ordered-lists <ol> <li></li> </ol>
 대문자 type="I" 로마 숫자 순서 번호 
<ol type="A" start="3" reversed(단일속성 속성값 필요하지 않음)> 시작순서 3번째부터  역순으로

    *type 속성값

    1 : 숫자(기본값)
    A : 영문 대문자
    a : 영문 소문자
    I : 로마숫자 대문자
    i : 로마숫자 소문자

    *start 속성 : 지정한 숫자부터 목록 시작
    *reversed : 항목을 역순으로(반대로) 표시

11. <ol></ol> , <ul> </ul>은 자식요소로<li></li> 만 쓸 수 있음
-> <li>감자를 1/4 크기로 자른다.</li> 각각의 요소를 Element 라고 부름 부모(자식을 감싸주는 요소) 자식 요소

12.    <dl> 태그 : '제목' 과 '설명' 을 묶어주는 설명목록(정의)
        <dt> 태그 : 설명의 대상, 제목/단어/질문 등
        <dd> 태그 : 설명/정의/답변 등
      -> 여백 띄어쓰기 가 없음

13. nested-lists ul 태그 안에 li 태그에서 ul 태그 중첩하는 방법
<!-- 목록태그 중첩!  -->

홈페이지의 메뉴 ul 태그 주로 쓰임
ctrl + shift 
들여쓰기 자동정렬 alt + shift + F

* 메뉴구현 카드뉴스 -> ul 태그 많이 이용


https://www.w3schools.com/
-> 웹과 관련된 설명 정의 확인 웹표준

------------------------------------------------------------------------------

3차시 

*태그의 속성

<태그명 속성="값" 속성2=>

<img src="images/amalfi-coast_1280.jpg" 이미지를 갖고오기 위한 속성 alt="" 웹의 접근성을 위한 속성>

    <img src="이미지 경로" alt="대체 텍스트"

    1) <img> 이미지를 삽입하는 태그 (이미지 갯수만큼 사용!)
    2) src : 이미지 파일 경로를 지정하는 속성
    3) alt : 이미지를 설명해주는 대체 텍스트
    *화면 낭독기를 사용하는 시각장애인에게 전달할 내용을 alt 속성에 작성, 웹 접근성을 고려해서 꼭 작성할 것!!!
    
    -->

 
*블록요소 <p> <ul><ol> <h1>
-덩어리
- 내용의 길이와 관계없이 너비 전체를 가지는 것!

*인라인요소
-블록요소x
-내용만큼만 공간을 가진다!

03_figure-and-figure-caption

*figcaption
-> figure(이미지와 설명을 묶어주는) 태그 안에서 설명을 하는 태그


*alt+shift 오른쪽 방향키 텍스트 전체 선택하기.

*파일명의 기본 규칙은 영문으로 띄어쓰기가 필요할 시 언더바나 하이픈

*링크

상대경로(주로 사용되는 방법)
-내가 작성중인 문서를 기준으로!!!

절대경로
- 루트폴더 기준!
서버 기준

    <!-- 
    *a 태그 = 앵커태그
    : 하이퍼링크로 연결할 수 있도록 하는 태그

    앵커태그 기본값
    1) 파란색 - 방문전
    2) 자주색 - 방문한 페이지
    3) 빨강색 - 활성링크(클릭하는 순간!!)
    
    -->

* 인터넷 연결 프로토콜 https


    <!-- 
    *모바일에서 사용하는 속성값

    <a href="tel:0234811005">전화걸기</a>
    <a href="sms:01012345678">문자전송</a>
    -->

*인터넷 방문기록 삭제
->ctrl + shift +delete 



        *앵커태그 target 속성값

        1) _self : 현재 브라우져에서 링크 열기(기본값)
        2) _blank : 새 창이나 탭에서 링크된 문서 열기
        3) _parent : 상위 문서에서 링크된 문서 열기(프레임 사용)
        4) _top : 창 전체에 링크된 문서 열기(프레임 사용)
        -->

*태그의 속성 attribute
 정보의 속성 property

----------------------------------------------------------------------

14차시

*의미를 위해서 태그를 적용하기 -> 디자인 ->

id 이름 문자 먼저 한글안됨 => #을 이용해서 표현

--> a 태그에 넣을 내용 없을때 임시로 넣는 기호 -> # 문서의 맨 위로 올리는 기호

*<table>
<!-- table 과 td 태그에만 테두리가 들어감 -->
<tr>각각의 줄(행) -> <td> 내용, 줄 안의 칸
                        -> <th> 제목 역할 할 때 이용
row 행 column 열 -> 행과 행의 병합(열이 높아짐), <td rowspan="2">
                        -> 열과 열의 병함(행이 넓어짐) <td colspan="2">
03_spanning-columns

* 셀 안에 글자와의 간격, 셀과 셀 사이 간격
<table cellpadding="10" cellspacing="10">


민속음악 사이트


*형식
css 속성명1: 값;
css 속성명2: 값;


* colgroup 테이블 간 열너비 설정할 때 -> table 태그 자식요소로 사용되어야 함
<colgroup>
        
<col width="20%">
<col width="40%">
<col width="40%">
        
</colgroup>

*나머지 두 개의 열에 35%를 적용할 때 (span 병합의 의미 병합된 것 갯수 확인)
<colgroup>
        
<col width="30%">
<col span="2" width="35%">
        
</colgroup>

*테이블 태그에 설명하는 태그 넣을 시(테이블 태그 다음에 바로 사용되어야 함)
-> <caption></caption>

*table 태그 -> caption 태그 -> colgroup 태그 나오는 순서

*테이블 구분할 때 사용하는 태그
        <thead></thead>
        <tbody></tbody>
        <tfoot></tfoot>

------------------------------------------------------------------------------------

15차시

<audio src="media/TheSimpleThings.mp3" controls 재생바 생성, muted, loop 자동반복, autoplay 자동재생></audio>

        <!-- 
        
        controls : 웹화면에 컨트롤 막대 표시
        autoplay : 자동재생 (브라우져 정책에 따라서 다를 수 있음)
        loop : 반복재생
        muted : 음소거
        
        -->

영상은 autoplay muted 로 음소거 추가하면 자동재생됨.

*<h2>유튭 영상 올리기</h2>
<iframe width="560" height="315" src="https://www.youtube.com/embed/jWQx2f-CErU?si=Qrzt48Z_T8_-uXxx" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
-> 웹브라우져 정책상 iframe 태그로 못가져 올 시 embed 태그 사용
<embed src="https://www.youtube.com/embed/jWQx2f-CErU?si=Qrzt48Z_T8_-uXxx" type="video/mp4" width="80" height="80">

*비디오 태그 안의 텍스트는 비디오 파일이 지원 안될 때만 보여짐.


        <!-- audio, video 태그에서 source 태그를 사용할 때 type 속성
         
        type="audio/파일포맷"
        type="video/파일포맷"

        mp4 : 최신 브라우저에서 모두 지원, 이전 버전에서 재생이 안되는 경우도 있음
        webm : 무료 코덱사용, 화질이 뛰어남
        -->

*시멘틱 태그* 의미가 있는 영역 덩어리  html5 


<header>로고, 메뉴, 
<nav> 대메뉴 목록의 링크 등
<section>
             <aside>즐겨찾기
<article>문서의 정보를 담은 하단 메뉴
<footer>
-->>(영역을 정의하는 거지 내용을 작성하는 부분이 아니므로 p태그나 h 태그 같은 텍스트 들어가는 태그가 필요함)

파이프 
-> shift + \

디자인 구성요소 제작, 설계 

-------------------------------------------------------------------------

16차시

기획-> 웹사이트의 목적, 주요사용자 파악 / 브랜드 소개, 사용 안내, 제품 소개 사용이유
디자인 스토리보드 구성요소에 대한 목적 파악 필요. 
개발(퍼블리싱, 개발)
테스트 및 배포

CSS

                         구분자(Delimiere) 마무리(End)
선택자(Selector){속성(Attribute) : 값(Value);    
  }

*스타일 적용 우선순위
전체 선택자 보다 태그 선택자의 우선순위가 높음           
id > class > 태그 순서로 선택자의 우선순위에 따라서 속성값 채택되는 순서가 됨
선택 대상이 범위가 적은 것(특정 범위를 선택하는 것)이 우선순위 

id 중복된 이름의 사용 불가능
class 중복 사용 가능   

           /* 
            클래스명 작성시

            1) 숫자로 시작 불가
            2) 숫자만 쓰는 것 불가
            3) 띄어쓰기 불가
            4) 한글 불가
            5) 특수문자는 하이픈 또는 언더바만 사용가능(- or _)
            6) 대소문자 구분 (소문자로 작성하는 게 기본!!!)
            */

--------------------------------------------------------------------------------------

17차시

1.인라인 스타일

<p style="color:red;">내용1</p>
<p>내용1</p>
<p>내용1</p>

2.내부 스타일 시트(embedded style sheet)
<style></style>
3.외부 스타일 시트
text.css
선택자{속성:값;}

*위치선택자

        /* li 중에 첫 번째 요소
        같은 태그를 가진 형제관계에서 주로 사용
        */
        li:first-child {
            color: blue;
        }
        li:last-child {
            color: red;
            font-size: 30px;
            
        }

        li:nth-child(3) {
            background-color: aquamarine;

        }
    <!-- 형제가 다르면(통일 안된 다른 태그가 있으면) 위치선택자 선택이 안됨. -->


        /* 
        :nth-child(2n): 2의 배수
        :nth-child(3n): 3의 배수
         */
         
/* 짝수, 홀수 선택하기 */
li:nth-child(2n)
li:nth-child(2n-1) or (2n+1)

        /* 
        홀수 - odd, 짝수 - even
         */

        /* a(태그):link(상태에 따른 표시)
        1):link -> 방문전 링크에 스타일 적용
        2):visited-> 방문한 링크에 스타일 적용
        3):active -> 웹요소를 활성화(클릭)했을 시 적용
        4):hover -> 웹 요소에 커서를 올렸을 때 스타일 적용
        hover와 active 같이 쓰려면 호버 먼저 기입
        css 는 선택자에 따라 영향을 받지만 후순위로 작성되는 순서에도 영향을 받음.
        */

            /* (태그/요소의) 속성 선택자 
            *태그의 속성 속성값을 선택할때-> [] */
            a[id] {
                background-color: yellowgreen;
            }

            a[class="link1"] {
                background-color: pink;
            } 

            /* 속성값 - 시작이 같은 것 찾기 ^=  */
            a[class^="link"] {
                color: red;
            }
            
            /* 속성값의 끝이 같은 것 찾기 $= */
            a[href$="net"] {
                border: 2px solid blue;
            }

            /* 같은 값 모두 찾기 */
            a[href*="www"] {
                text-decoration: line-through overline ;
            }

*상속받은 태그의 속성이 먼저 적용됨
* nth-child 사용시 같지 않은 형제 관계가 먼저 있으면 그 태그가 우선 순위 번호가 됨
-> 해결 방법 같은 태그는 div 태그 안 으로 적용

*li 태그 리스트 스타일 없애기
-> li list-style : none -> ul padding-left: 0px

----------------------------------------------------------------

18차

1. 웹폰트 변환하기

step1. 폰트 변환(ttf, otf, -> eot, woff)
step2. 변환된 폰트의 사용 설정(@font-face)
step3. 대상을 선택해서 적용!

1) 직접변환
-> exe 에 변환할 폰트 파일 드래그해서 놓기
-> style 최상단에 
            @font-face {
                font-family: '훈하늘보리R';
                src: url('font/훈하늘보리R.eot') format('embeded-opentype'), url('font/훈하늘보리R.woff') format('woff');
            }

2) 변환 사이트 이용

https://transfonter.org/
변환 사이트에서 변환할 파일 add fonts 에서 추가 후 eot, woff, woff2 체크하여 추출
-> 다운받은 파일 기존 vs code 작성하는 파일에 옮기기
-> css 파일 열어서 속성 태그 복붙해서 기존 파일에 추가 후 url 경로 수정후 class 추가해서 지정
 

        /* 폰트 파일 확장자 확인
        eot : IE 하위버전을 위해서 만들어진 포맷
        woff : 크롬, 사파리 등 모던 브라우저를 위해 사용
        woff2 : woff를 개선한 파일 포맷으로 woff 대비 30~50% 압축율이 높음, 브라우저에서 지원이 안 되는 경우가 있으므로 woff 포맷과 함께 사용 
        더 많이 압축해서 빠르게, 1과 같이 이용
        */

        /* font-family 적용 시 
            
            한글명일 때나 폰트 전체가 그룹으로 되어있을 때
            -> ''으로 묶어주기

            */

2. 구글 웹폰트 사용하기

1) <link> 사용
2) @import 사용 (<style> 내에서 사용)

티몬몬소리체, 도현체 타이틀에 적합한 서체

            /* font-size */
            /* 웹 기본 폰트 사이즈 : 16px 
             1em 상속의 기준에 따라 달라짐
              rem 문서의 기준에 따라 
              16px = 1em = 1rem

            글자 크기 단위는 px, em, rem 사용가능!
            */

             /* 폰트 두께 없애기 */
             h4 {
                font-weight: normal;
             }

<ins>내용 삽입</ins>
            <del>내용 삭제</del>
            <u>밑줄밑줄</u>

-----------------------------------------------------------------------

19차시

h 태그 와 p태그는 마진을 갖고 있음(패딩은 없음)

선택자의 나열 
->상위 하위 구조 같이 선택해서 적용하기 나중에 코드 분석할때 확인이 용이함.
예) .content .box {

*웹에서 고정값 : px
          가변값 : %
*상위요소(부모요소)에 따라서 %의 기준이 결정됨.
*인라인 요소는 너비를 조절해도 내용만큼의 너비만 갖는다

*블록 요소 -> 화면 너비만큼 속성을 가짐
인라인 요소 -> 텍스트 내용만큼 가짐

---------------------------------------------------------------------------

20차시

*인라인 태그 안에 블록 요소 태그 사용 불가
*블록 요소 태그 안에 블록 태그 사용 불가능 태그 있음
예) p태그 

*border-width(두께)
*마진은 위치에만 영향을 줌
->크기에 영향을 주지 않은 
내용+패딩+보더 = 총 크기(가로의 합)

*덩어리 내용 자체가 문서 중앙에 오게 하기
-> margin: 0 auto;

*패딩은 auto 속성 사용 불가

*box-sizing: border-box;
->패딩이나 보더를 추가해도 처음 정한 너비 값으로 적용

*width: 100%;
-> 컨텐츠 너비로 100%를 쓴다는 의미 위드값을 넣으면 화면 크기에 따라 x축 스크롤 생김

** .display .none {
                /* display: none; */ -> 해당 내용이 안보이게 되고 공간이 사라짐
                visibility: hidden; -> 해당 내용이 안보이게 되고 공간은 유지 

*인라인 요소 태그에는 너비 높이가 적용이 잘 안됨 
->인라인 요소가 기본으로 갖는 크기가 우선 적용되기 때문에, 내용만큼의 크기가 유동적으로 바뀜

display: inline-block;
-> 인라인 요소 가로로 나열, 블록요소 : 너비 높이를 조절 가능

-------------------------------------------------------------------------

21차시

*덩어리를 만드는 구조화 연습 많이 하기

*코드 시작시 내용 구조 reset 방법
 [*] -> 전체요소 선택자 쓰면 스타일 적용되서 뿌려질때  속도가 느려짐
-> 태그 요소 하나하나 기입해서 쓰기 
-> html, body, header {} 식으로 기입

*박스에 쉐도우 줄때(텍스트도 동일)
box-shadow: 0 4px 6px #d9d9d9 ;  x y blur color
text

패딩은 요소가 가진 크기에 영향을 줄
마진은 크기에 영향을 안줌 나중에 위치 잡을 때 영향을 줌 -> 마진은 배경색이 적용이 안됨, 패딩은 배경색 적용됨

영역간의 공간이 너무 많으면 맥락이 끊긴 것 같이 느껴질 수 있음


            /* outline: 2px solid red; */

section .content .box a.btn {} a태그의 클래스 btn을 선택!

요소의 크기(너비)= content(내용) + padding + border

box-sizing: border-box; 설정한 너비와 높이 값으로 전체 사이즈를 재설정하기

display: inline-block; 인라인이가지는 특징(내용만큼 너비, 가로 나열) + 블록요소(너비와 높이 마진 조절가능 )

a 태그는 색깔 바꿀때 a태그를 직접 클래스 선택해야지 변경 가능


      /* 
        
        margin : 0 auto; 를 사용하여 덩어리를 좌우 중앙에 배치하려면!
        1) 블록요소여야 하고
        2) width 값이 100% 보다 작아야 한다
        
        */

            /* 
            
            부모를 포함한 상위요소에 'text-align' 스타일 적용되는 경우, 
하위 요소 중 인라인 성격을 가진 요소는 글자처럼 취급, text-align 을 통해 정렬할 수 있다!
            */

*보더 레디우스는 입력값 2개 넣을시 각각 대각선 자리로 값이 들어감
border-radius: 20px 100px;
*입력값 4개 일 때 :왼쪽 위부터 시계방향
border-radius: 20px 80px 0 40px ;
*한쪽만 radius 없애는 방법
->border-radius: 30px;
   border-top-right-radius: 0;

*border-radius 로 원 만들때  

-----------------------------------------------------------

21차시 

화면 구성시 안에 구성하는 내용에 따라서

컬럼 사이 ->  거터 없으면 한개의 레이아웃으로 보여 부자연스러움 

구글 gofullpage 스크롤샷

갤럭시 375, 385 까지 커짐 하지만 해상도가 그정도라는 건 아님
픽셀 적용 시 배수에 따라서 적용 보여지는 화면의 크기는 같은데  360*2 720 같이 나올수 있음 더 선명하게 됨

모니터  768 1024


            /* background
            
            repeat : 기본값, 주어진 공간을 가득 채울 때까지 배경이미지가 반복됨.
            repeat-x : 배경이미지를 x축(가로)으로 반복
            repeat-y : 배경이미지를 y축(세로)으로 반복
            no-repeat : 배경이미지를 한번만 표시하고 반복하지 않음

            */

    <title>04_background-size</title>
    <!-- 이미지를 추가할 땐 % 로 지정, 다른 해상도 모니터에도 적용될 것을 고려,  px은 고정값이라 적용이 안됨-->

background-size: contain; 이미지 잘림없이 들어감  짧은 축을 기준으로 이미지를 늘려줌
background-size: cover; 이미지가 들어가는 공간 전체 들어감 이미지 잘림 있음 긴 축을 기준으로 이미지를 늘려줘서

        /* 
        background-size : width height; 의 속성값
        - auto : 기본값, 자동맞춤(원래 이미지 크기 그대로 사용)
        - contain : (배경이미지가 적용되는 공간의)짧은 축을 기준, 이미지가 주어진 공간에 잘리지 않고 보여짐 
        - cover : (배경이미지가 적용되는 공간의)긴 축을 기준, 박스가 가지고 있는 크기에서 긴 축을 채워주므로 이미지가 잘리는 경우가 발생
        */
*직접 px, % 수치 입력 가능

        px : 이미지 크기 직접 조절
        % : 배경 이미지가 들어가는 박스 기준으로 크기 설정
        */

background-size: auto 100% ;
너비는 고정일 때 자동값, 높이에 따라 유동적일 때

*이미지 태그를 사용할 땐 조절해서 사용(너비 고정시 높이 조정)
*이미지를 사용할 땐 이미지를 담는 박스(div)를 꼭 사용한다 


        1. 이미지의 크기 조절
        - 이미지 태그, 배경이미지는 크기 조절을 하지 않을 경우 '이미지 원래의 사이즈가 사용' 되므로 크기 조절 필수!!

        - 이미지 크기를 조절할 때 width, height 값을 동시에 넣는 경우
        이미지 비율을 무시하고 크기를 설정하겠다는 의미가 되므로 이미지 비율이 깨지게 됨

        - 그러므로 이미지 크기 조절은 width, height 중 하나의 값을 설정하고 비율에 따라 자동으로 값이 설정되도록 한다.
        (ex. width 값만 설정할 경우 -> 비율에 따라 height 값이 자동 조절됨)

        2. 이미지태그 사용 시
        - 화면 너비에 따라 유동적으로 이미지 크기 조절이 필요한 경우가 많으므로, img 태그는 
        주로 '이미지를 담는 상자(ex. div 태그)'에 넣어서 사용하는 것이 필요함
        */
화면설계를 위한 레퍼런스
디자인을 위한 레퍼런스 자료 찾아서 캡쳐

------------------------------------------------------------------------------------------------------

22차시 250304

보더영역까지가 배경색 영역임.

background-clip: content-box; padding-box; 
->해당영역까지만 배경색 적용
->background-clip: text ; 텍스트 안으로 적용(이미지도 가능) ->  color: transparent; 텍스트 색 투명으로 필수적용

웹킵(webkit 브라우저를 운용하는 엔진)엔진 기반의 브라우저 -> 구글, 사파리
밴더 사가 다르면 도와주는 속성 ->밴더프리픽스

*이미지를 넣을 때 내용 전달인지(이미지 태그 이용) 심미적인 부분을 활용할지(배경이미지로 이용)
확인 후 사용

/* background: color url() repeat position/size attachment */
->background: #fff url(images/faq_topimg.jpg) no-repeat center 10px ;

*width 값 지정 안하면 padding border 지정하면 전체 너비 안으로 포함됨

        margin : 0 auto; 를 사용하여 덩어리를 좌우 중앙에 배치하려면!
        1) 블록요소여야 하고
        2) width 값이 100% 보다 작아야 한다

 text-align 은 인라인 요소여야 하고 이미지 자체는 안되고 div 같은 블록요소의 하위요소로 포함해서 사용

부모를 포함한 상위요소에 'text-align' 스타일 적용되는 경우, 
하위 요소 중 인라인 성격을 가진 요소는 글자처럼 취급, text-align 을 통해 정렬할 수 있다!
            */

화면 설계의 목적 파악과 구성 방법 확인

------------------------------------------------------------------------

250306

내용만큼의 너비를 잡으려면 인라인 성격으로 변환

*요소끼리 구성되어있어야지 요소끼리 정렬이 됨
하나는 요소, 하나는 텍스트면 서로 정렬이 안됨. (이미지와 글자는 둘다 요소로 만들어 적용)

제한된 공간을 분할해서 사용하는 경우가 많았음
-> 최근 트렌드는 내가 찾고 싶은 정보를 메뉴에서 찾거나 그게 아니면 한번클릭으로 들어강되는데 그렇지 않으면 불편하게 됨.

영역별로도 어색하지 않고 영역전체로 봤을때도 자연스럽게 흐름이 보여야함
영역의 내용이 명확하지 않으면

전체 메인 영역 1 영역1
-> 영역이 어떻게 구성될 건지 목적이 뭔지 생각해봐야됨



-----------------------------------------------------------------------------

2550307

영역에서 이미지가 없어도 어떤 내용 인지 충분히 전달이 가능한 내용이 있는가 고려
이미지가 없으면 영역에서 전달될 수 있는 내용이 내포되어 있어야 됨.
->단순 사진만 나열되면 영역의 목적을 잃어 버림
->여긴 이런 내용이 되겟다라는 흐름이 읽힐 수 있게 작성
-> 레이아웃 와이어 프레임은 단순하게 우선 만들기

*음식 요리 컨셉

->다른 학원에서 배울 수 없는 스킬을 배울 수 있고 
요리의 맛 뿐만 아니라 전체적인 디자인 이미지의 고급화,  플레이팅 디자인의 창의성을 부각시켜주는 컨셉의 요리가 가능하게,   
이 학원에서 배우면 전문 요리사가 될 수 있겠다 라는 신뢰감의 컨셉

*디자인 시안
 1920*1080

영역을 fixed 하면 없는것처럼 취급이됨 그래서 section 부터 보이게됨

css의 position 속성
            - 위치를 지정하는 스타일 속성
            - 좌표값을 사용하여 위치 지정(left, right, top, bottom)
            - position 이 없으면 좌표값이 적용되지 않음
            - 좌표값은 px, % 단위 사용 (좌표값 = 이동거리)

            position 속성값
            1) relative
            - 상대위치
            - 요소의 현재 위치를 기준으로 이동(left, top 좌표만 사용 가능)
            - absolute를 가진 상위요소의 기준으로 사용!

            2) absolute
            - 절대위치
            - (부모를 포함한) 상위요소를 기준으로 요소의 위치를 지정
            - 기준이 되는 상위요소에 position: relative ; 선언
                (형제요소는 기준이 될 수 없음!)
            - 기준이 되는 상위요소가 없을 경우 문서 전체(body)를 기준으로 위치 이동
            - left, right, top, bottom 좌표 사용 가능

-----------------------------------------------------------------------------------

250310

position 속성을 가져야만 쌓이는 순서에 영향을 받음! 요소가 가지는 속성의 영향을 받음, position 을 가진 요소가 우선적으로 위에 쌓임
-> z-index: ; 로 쌓이는 순서 변경 가능, 숫자가 클 수록 위에 쌓임

* 쌓이는 우선 순위
-> html -> position -> z-index

포커스와 시각을 어떻게 두느냐에 따라 해석이 달라짐 

헤더는 영역의 개념으로


특징 경쟁력 
주력 서비스 어필 


-------------------------------------------------------------------------------

250311

float 은 부모자 자식 요소의 높이를 읽지 못함. 아웃라인 넣으면 상단에만 들어가게됨 
-> overflow : auto 로 읽을 수 있게 작용 가능,  float 기능 해제의 역할

        float 
        -요소를 '가로'로 나열할 때 사용
        - 부모 공간에서 가로로 나열되는 요소에 float 적용
        - float 된 요소는 부모요소가 높이를 읽을 수 없으므로 부모의 높잇값이 0이 되는 문제가 발생!
        - float 적용 후, float 해제 작업이 필요!
	- 부모가 높이를 못 읽음, 하단 요소를 빈공간으로 끌고 감

*<main></main>
->가장 핵심적인 내용을 담아주는 곳, 단독으로 쓰여야 함

*부모가 높잇값을 갖고 있지 않으면 자식 요소에 %를 쓸 수 없다.

*clear:both; 다음요소가 있을 때 다음요소에 적용 , but 부모가 높이를 여전히 못 읽음.

*before, after
각각의 요소에 최대 2개의 가상요소 만들 수 있음, float 을 해제하기 위한 가상요소

*새로 들어온 요소는 처음에 인라인 요소로 취급함 

/* float 해제하는 방법 - 1번 */
    clear: both; *clear:both; 다음요소가 있을 때 다음요소에 적용 , but 부모가 높이를 여전히 못 읽음.

    /* float 해제하는 방법 - 3번 */
    /* overflow: auto; */

    /* float 해제하는 방법 - 4번 */

    /* height: 400px; */

  /* float 해제하는 방법 -5번 */
   /* 
   
   float 을 해제하기 위한 클래스와 가상요소 생성
   -사용 위치 : float 된 자식을 감싸는 부모요소(또는 상위요소)에 사용
   */
-->   .clearfix::after{
    content: "";
    display: block;
    clear: both;
   }


<p>Copywright &copy; Greenart.com</p>
            <!-- entity 코드 -->

*float 할 시 너비를 적용안했을 때에는 요소들이 내용만큼의 너비만 갖는다 (블록요소, 인라인요소에 따라 적용이 안됨)
*float 할 시 자식들이 높이 적용 안될 시
-> 상위 요소 박스에 overflow:auto; 처리
-> 상위 요소 박스에 height 값을 줌(요소들이 계속 나열되는 높이 값이 지정안되는 상황일 때는 사용불가)
->        .content::after {
            content: "";
            display: block;
            clear: both;
        } 해당 요소로도 직접적으로 이용가능


*--------------------------------------------------------------------------------

250312

*인라인 요소 끼리는 패딩 적용 안받아서 block 으로 재 지정 후 margin 적용

*리셋(초기화)

공통 css
- 태그 선택자
- 공통 클래스 동일하게 적용할 태그 적용

html 에 문서에 대한 css

*공간 확인 할 땐 outline 으로 크기에 영향을 안 미침

*이미지의 너비 높이 둘다 임의로 넣으면 안됨. 비율 때문에

*컨텐츠 너비
-> 1200~1280px 기준으로 사용 (물리적인 크기인 1320px 모니터에서 봤을 때 좌우 20 씩 남게)


   /* 2) 여백을 제외한 너비 설정 */ 오른쪽 여백을 없애서 가운데 정렬할 시
    width: 23.5%;
    /* margin-right: 2%; */
    /* 이미지 사이 설정 2% * 3(이미지 사이 거터 개수) -> 94% / 4  */

/* .recipe .content .box:last-child {
    margin-right: 0;
} */

*왼쪽 여백을 없애서 가운데 정렬할 시
.recipe .content .box ~ .box {
    margin-left: 2%;
    /* ~ 형제요소 선택자 첫번째 것 제외하고 적용 */

*한 줄에 4개씩 나열할 시 5, 9 번째 순서에 margin-left 0 적용
.recipe .content .box:nth-child(4n+1) {
    margin-left: 0;
} 

*이미지 요소는 인라인요소라도 예외적으로 너비 높이가 조절가능해서 마진도 가능

box-shadow: 0 2px 10px rgba(0,0,0,0.5);

*margin-top bottom 은 %로 입력시 너비 기준으로 값이 들어감.   

■ 수행평가 쪽지시험1 해설
head : 웹문서에 대한 설정이나 정보가 저장되는 공간
body : 브라우저에 보여질 것을 작성하는 공간

링크 태그에 경로 속성값으로 사용할 수 없는 것은? **클래스명



웹사이트 트렌드
브랜드 트랜드
-> 브랜드가 웹에 얼마나 반영되있는가
숏폼을 활용한 마케팅


키워드 도출
경쟁사 웹사이트 분석
1.
2.

1.웹사이트의 기능적인 부분
피자 사이트 -> 자사 홈페이지에서의 온라인 주문 강조 (공통적인 기능 e쿠폰, 이벤트 할인)


---------------------------------------------------------------------------------------

250314

float 해제 clear 적용은 부모 요소 뿐만 아니라 더 상위 요소에 적용해도 됨.

이미지 float 시 여백 생기는 부분 없애기
: img 선택자에 diplay: block;  or float:left;

text-transform: uppercase; 전부 대문자화 하기

*하위요소 중 인라인 성격을 가진 요소는 글자처럼 취급되므로 text-align 을 통해 정렬할 수 있다

GTQ 출력!!

/* hover */ 이미지 줌-인앤 아웃 효과 하기
1) .instagram .content ul li:hover img {
    transform: scale(1.5);
}-> 이미자 부모요소에 hover 적용 하면 크기 1.5배 커지게 하기

2) .instagram .content ul li{}
-> 부모요소에서    overflow: hidden;
    /* hover 했을 때 이미지 크기가 커지면서 li 공간을 넘치게 되면 넘치는 부분을 안보이게 하기! */


3) .instagram .content ul li a img {
    transition: all 0.6s;
}-> 마우스를 갖다 댔다가 치울 때도 부드럽게 줌 아웃됨

/*  float 해제를 위한 클래스 가상요소 블록처리 클리어처리*/

Fredoka 서브웨이에서 이용하는 폰트
<!-- 구글 웹폰트 링크 css 먼저 적용 -->


------------------------------------------------------------------

250317

*이미지 높이가 안잡힘 -> 부모요소의 내용만큼 잡히게됨

*바디에 하지 말아야 될 것(해당 공간 전체가 그대로 사용되게 해야함)
-> 너비 높이 text-align padding, margin  
예외) 도 있지만 알려주는 부분만 사용

*웹에서는 상대경로 먼저 쓰고 나중에 조정할 때 절대경로 사용

*inline-block 나열될 공간의 여유가 있을 때 

*float 가로 나열 시 일정한 공간(n분의1)으로 가져야할 때 
-> 너비값 지정안 할시 내용만큼의 공간을 가지고 둥둥 떠있음

*가상요소 사용시
->주로 absolute 사용


text-indent: -9999px; 블록요소가 아니면 적용안됨 */
letter-spacing: -0.6px;
word-break: keep-all; 단어중간에 끊지 않겠다
line-height: 1; /* 행간 사이에 공간없이 숫자만 써줄시에는 rem 단위 */

*기준공간에서 내가 원하는 위치에 맞출 때
->absolute

*relative 는 left, top 만 이용 가능 -> 

*레이아웃을 마크업할 땐 영역의 덩어리, 내용의 전달, css 를 고려해서 


--------------------------------------------------------------------------------------------

250318 능력단위평가

디자인 리서치 및 시안디자인 개발

- 시각디자인 리서치 조사(20)
- 시각디자인 리서치 분석(20)


- 비주얼 아이데이션 구상 (30)
아이디어가 만들어지는 과정 전체 일련의 과정 시각적인 아이디어를 구체화하고 시각화하는 모든 과정들 
- 비주얼 아이데이션 전개 (30)

- 시안디자인 개발 심화 (30)

레이아웃 색감 그래픽 서체 고려 -> 진정성 고려 군더더기 없고 집중되는 

아이디어 구상/아이디어 스케치/비주얼 모티프
->관련 이미지 검색 / 관련문헌 자료 검색 / 마인드맵을 통한 키워드 추출 / 브레인 스토밍
->브랜드의 주 소비층 확인 중요

레이아웃의 개선을 위한 리뉴얼 / 웹사이트의 목적을 달리한 리뉴얼 / 사용자의 설정  으로 내용적인 부분까지 생각 중요

**리뉴얼할때 유심히 봐야될 것 
->여기를 주로 들어오는 사용자 입체적 분석 중요
웹사이트의 목적 꼭 설정 >> 사용자들이 어떤 정보를 보길 원할 까 기업입장에서는 어떤 정보를 전달하길 원할까 고려 중요
->그래야 메뉴 구성이 가능 
-> 클라이언트가 이 사이트를 왜 만들고 싶어하지를 파악
-> 브랜드의 배경지식, 주제의 시장현황
->시각화 할수 있는 키워드 내용에 대한 키워드 파악 

연습장에 머리속에서 맴돌고 있는 것을 써나가고 모아서 구체화

***플래그쉽 스토어 해당 브랜드를 사용할 수 있는 공간 소개 추가로 페이지 구성
->  제품을 경험 할 수 있는 공간  제품에 대한 접근이 달라지고 있는 추세 고려.
->  메인 화면 의 해당 브렌드 제품을 설명 및 소개 중 + 제품 구매도 추가로 가능
->  네이버 스마트 스토어 구매 가능 기능 (자사홈페이지도 가능하지만 더 쉽게 접근할 수 있는 채널도 이용가능하도록)

사용자층 세대의 흐름 을 분석 필요
기업웹사이트 위주 안에 쇼핑몰의 형태가 추세
기업 홈페이지 브랜드를 대표할 수 있는 내용 소개 중요

브랜드 이름을 떠올렸을 때 특별하다

브랜드의 이미지를 임팩트있게 각인 시킬수 있는 인트로 페이지 메인페이지가 전달되는 게 중요

*디자인한다고 했을떄 디자인 컨셉 
->웹사이트의 내용을 어떻게 전달할 수 있을까를 관련된 자료 키워드 시각화 할 수 있는 자료 조사 후 도출
->디자인 소스 쓸 때, 아이콘 쓸 때 내가 추구하는 디자인 (2d 3d 선색 면색 포인트 여부 선의 두께에 따라)
-> 공통적으로 들어간 디자인의 아이덴티티 조사 

브랜드 이미지 느낌 트렌디한 팝업스토어 색조 악세사리 
브랜드 컬러                                    텍스터 

*디자인 컨셉 키워드 선정(마인드맵)
브렌드이미지 컬러/디자인 제품 이미지/특성 브랜드 마케팅(내가 정의해보고 싶은 디자인 특성)
공통적인 특징이 있는 자료를 다수 수집하는게 중요

*그래픽 자료
웹 구성요소 컨셉
실사위주
제품의 텍스처가 돋보이게
촉촉 탱글 과일느낌
원형 부드러운 곡선의 느낌살리기 제품 제형이 떠오를 수 있도록



브랜드 메인/서브 컬러 활용, 전체적인 웹 화면 에 쓰이는 톤은 모던 깔끔 구현
미디어- 하이틴 y2k 발랄 상큼한 아기자기 컨셉

1.키워드로 자료수집(비슷한 분위기의 키워드끼리 모음)
2.이미지 레이아웃 분위기가 같은 것들을 수집(분류하고 분석)
3.내가 표현하고 싶은 디자인의 컨셉을 시각적으로 전달 
4.컬러와 서체 선정 내 방향을 나타낼 수 있는 키워드를 반영해서 



**고디바 추구
고디바는 선물에 다양한 감정과 가치를 표현하고 
일상 속에서 초콜릿을 즐기는 소비자의 취향과 라이프스타일을 표현하는 역할을 수행한다는 의미를 담았다.
'아늑하고 편안함 고급스러움 모던함 신뢰적인 화려함'


https://www.ytn.co.kr/_ln/0135_202503171411167059 컬래
https://www.donga.com/news/Economy/article/all/20250120/130896279/1 브랜드 가치
https://view.asiae.co.kr/article/2020052712064693457 고디바 색조 디자인


    /* 1번 - 전체 너비 사용, 고정된 양쪽 패딩 설정 */

    /* width: 100%;
    padding: 0 100px;
    padding: 0 5%;  반응형까지 고려하면 % 이용 
    box-sizing: border-box; */

    /* 2번 - width, max-width 설정 */

    /* width: 90%;
    max-width: 1720px; /*화면 %를 줄여도(화면 물리적인 크기가 커져도) 내가 지정한 최대값까지만 설정*/
    /* margin: 0 auto ; */

    /* 응용 */

    width: 100%;
    max-width: 1920px;
    margin: 0 auto;
    padding: 0 5%;
    box-sizing: border-box;



------------------------------------------------------------------------------------------

250319

pc 1920
pad 1024 
       768 
cell phone 320/360 /* padding: 0 5%; 반응형까지 고려하면 % 이용*/ 화면 너비에 따라 유동적으로 반응할 수 있게

width: 90%;
max-width: 1720px; -> /*화면 %를 줄여도(화면 물리적인 크기가 커져도) 내가 지정한 최대값까지만 설정*/

-------------------------------------------------------------------------------------------------------

250312

*css 시작시 문자 인코딩 설정
->@charset "UTF-8";

html5 css3(스타일 언어)  start up
web standard 웹표준
크롬 엣지 사파리 파이어폭스 오페라

*시작
DTD html5 선언

head 
->html 문서에 대한 정보를 저장하는 곳 화면에 작성된 내용이 나오지 않음

body
-> 화면에 표시될 각종 내용

<태그명 속성명="값">
문자 인코딩 설정